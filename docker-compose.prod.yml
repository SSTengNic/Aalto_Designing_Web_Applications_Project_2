version: "3.4"

volumes:
  astro_node_modules:

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - qa-api
      - qa-ui
    ports:
      - 7800:7800

  qa-api:
    build: qa-api
    image: qa-api
    restart: "on-failure"
    volumes:
      - ./qa-api/:/app
      - ./app-cache/:/app-cache
    expose:
      - 7777
    depends_on:
      - database
      - flyway
    env_file:
      - project.env
    deploy:
    replicas: 2
    restart_policy:
      condition: on-failure
      delay: "5s"
      max_attempts: 5
      window: "30s"

  qa-ui:
    build: 
      context: qa-ui
      dockerfile: Dockerfile.prod
    image: qa-ui-prod
    restart: "on-failure"
    deploy:
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"
    volumes:
      - ./qa-ui/:/app
      - astro_node_modules:/app/node_modules
    expose:
      - 3000
    depends_on:
      - qa-api

  llm-api:
    build: llm-api
    image: llm-api
    restart: "no"
    expose:
      - 7000

  database:
    container_name: database-server-dab-p2-1ea650f4-36e7-487c-be8a-c26a8a58dbb3
    image: postgres:14.1
    restart: "unless-stopped"
    env_file:
      - project.env
    volumes:
      - ./production-database-data:/var/lib/postgresql/data

  flyway:
    image: flyway/flyway:9.11.0-alpine
    depends_on:
      - database
    volumes:
      - ./flyway/sql/:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.env

  e2e-playwright:
    entrypoint: "/bin/true"
    build: e2e-playwright
    image: e2e-playwright
    network_mode: host
    depends_on:
      - nginx
    volumes:
      - ./e2e-playwright/tests:/e2e-playwright/tests